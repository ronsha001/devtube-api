name: Build and Deploy Docker Image

on:
  push:
    branches:
      - release/*
      - feature/*

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Check out the code
      - uses: actions/checkout@v2

      # Extract the latest tag and increase it by 1
      - name: Generate patch tag
        id: tag
        if: startsWith(github.ref, 'refs/heads/release/')
        run: |
          BRANCH_PARTS=($(echo "$GITHUB_REF" | tr '/' ' '))
          VERSION=${BRANCH_PARTS[3]}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

          git fetch --all --tags

          NEW_TAG=$(($(git tag | grep ^$VERSION | sort --version-sort | tail -1 | cut -d '.' -f 3) + 1))
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_OUTPUT


          NEW_VERSION="${VERSION}.${NEW_TAG}"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT

          echo "VERSION:  $VERSION"
          echo "NEW_TAG:  $NEW_TAG"
          echo "NEW_VERSION:  $NEW_VERSION"

      - name: Build
        run: |
          sudo apt-get install moreutils
          usingBuild=$(yq '.services.api.build' docker-compose.yaml)
          if [ "$usingBuild" != "null" ]; then
            # Replace key name 'build' to 'image'
            yq '(.services.api.build | key) = "image"' docker-compose.yaml | sponge docker-compose.yaml
          else
            echo "not using build"
          fi

          # Replace image value to actual api-test image
          yq '(.services.api.image = "test-api")' docker-compose.yaml | sponge docker-compose.yaml
          # Delete mongo's service volume
          yq 'del(.services.mongo.volumes, .volumes)' docker-compose.yaml | sponge docker-compose.yaml
          
          # docker build -t test-api .
          cat docker-compose.yaml
          # docker-compose up -d

      - name: Tests
        run: |
          wget --tries=10 --waitretry=5 --retry-connrefused --retry-on-http-error=502 -O- http://localhost:3001/api/videos/random
          pushd tests
            python3 api-unitTest.py
          popd